---

resources:

- name: cf-for-k8s-master
  type: git
  icon: github-box
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((github_private_key.private_key))
    branch: master
    ignore_paths:
      - ci/**

- name: cf-k8s-networking
  type: git
  icon: github-box
  source:
    branch: master
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git

- name: cf-k8s-networking-rc
  type: git
  icon: github-box
  source:
    branch: release-candidate
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git

- name: cf-k8s-networking-config
  type: git
  icon: github-box
  source:
    branch: master
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    paths:
      - config

- name: cf-k8s-networking-ci
  type: git
  icon: github-box
  source:
    branch: label-images
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    paths:
      - ci
      - config

- name: cfroutesync
  type: git
  icon: github-box
  source:
    branch: master
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    paths:
      - cfroutesync

- name: routecontroller
  type: git
  icon: github-box
  source:
    branch: master
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    paths:
      - routecontroller

- name: cfroutesync-image
  type: docker-image
  icon: docker
  source:
    repository: gcr.io/cf-networking-images/cf-k8s-networking/cfroutesync
    username: _json_key
    password: ((gcp_gcr_service_account_key))

- name: routecontroller-image
  type: docker-image
  icon: docker
  source:
    repository: gcr.io/cf-networking-images/cf-k8s-networking/routecontroller
    username: _json_key
    password: ((gcp_gcr_service_account_key))

- name: concourse-dcind
  type: git
  source:
    branch: master
    uri: git@github.com:karlkfi/concourse-dcind.git
    private_key: ((github_private_key.private_key))

- name: version
  type: semver
  icon: counter
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    private_key: ((github_private_key.private_key))
    branch: version
    file: version
    git_user: cf-networking@pivotal.io

- name: cf-k8s-networking-release
  type: github-release
  icon: github-box
  source:
    user: cloudfoundry
    repository: cf-k8s-networking
    drafts: true
    access_token: ((github_access_token))

groups:
  - name: build
    jobs:
      - run-cfroutesync-units
      - run-routecontroller-units
      - run-routecontroller-integration-tests
      - publish-cfroutesync-image
      - publish-routecontroller-image
  - name: dont-smoke
    jobs:
      - dont-smoke-for-k8s-deploy-and-test
      - bump-rc
      - ship-it
jobs:
# Build
- name: run-cfroutesync-units
  plan:
    - in_parallel:
        - get: cf-k8s-networking
        - get: cfroutesync
          trigger: true
        - get: cf-k8s-networking-ci
    - task: unit-tests
      file: cf-k8s-networking-ci/ci/tasks/tests/run-cfroutesync-units.yml

- name: run-routecontroller-units
  plan:
    - in_parallel:
        - get: cf-k8s-networking
        - get: routecontroller
          trigger: true
        - get: cf-k8s-networking-ci
    - task: unit-tests
      file: cf-k8s-networking-ci/ci/tasks/tests/run-routecontroller-units.yml

- name: run-routecontroller-integration-tests
  plan:
    - in_parallel:
        - get: cf-k8s-networking
          tags: [overlay-storage-driver]
        - get: routecontroller
          passed: [run-routecontroller-units]
          tags: [overlay-storage-driver]
          trigger: true
        - get: cf-k8s-networking-ci
          tags: [overlay-storage-driver]
        - get: concourse-dcind
          tags: [overlay-storage-driver]
    - task: integration-tests
      privileged: true
      tags: [overlay-storage-driver]
      file: cf-k8s-networking-ci/ci/tasks/tests/run-routecontroller-integration-tests.yml

- name: publish-cfroutesync-image
  serial: true
  serial_groups: [image-publishing]
  plan:
    - in_parallel:
        - get: cf-k8s-networking
        - get: cfroutesync
          passed: [run-cfroutesync-units]
          trigger: true
        - get: cf-k8s-networking-ci
    - task: build-tag-file
      file: cf-k8s-networking-ci/ci/tasks/docker/build-tag-file-for-image.yml
    - put: cfroutesync-image
      params:
        build: cf-k8s-networking/cfroutesync
        dockerfile: cf-k8s-networking/cfroutesync/deploy/Dockerfile
        additional_tags: docker-info/tags
        tag_as_latest: true
    - task: add-updated-digest
      file: cf-k8s-networking-ci/ci/tasks/docker/add-updated-digest.yml
      input_mapping:
        image-resource: cfroutesync-image
      params:
        COMPONENT_NAME: cfroutesync
    - put: cf-k8s-networking
      params:
        repository: cf-k8s-networking-modified
        rebase: true

- name: publish-routecontroller-image
  serial: true
  serial_groups: [image-publishing]
  plan:
    - in_parallel:
        - get: cf-k8s-networking
        - get: routecontroller
          passed: [run-routecontroller-integration-tests]
          trigger: true
        - get: cf-k8s-networking-ci
    # Note: this is not the final image. Just needed to get the docker image as a tarball to annotate.
    - put: initial-image
      resource: routecontroller-image
      params:
        build: cf-k8s-networking/routecontroller
        dockerfile: cf-k8s-networking/routecontroller/Dockerfile
      get_params:
        save: true
    - task: build-tag-file
      file: cf-k8s-networking-ci/ci/tasks/docker/build-tag-file-for-image.yml
    - task: annotate-image
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/cf-routing-desserts/ci-image-metadata-annotator
            username: _json_key
            password: ((gcp_gcr_desserts_service_account_key))
        inputs:
        - name: cf-k8s-networking
        - name: initial-image
        - name: cf-k8s-networking-ci
        outputs:
        - name: labels
        run:
          path: cf-k8s-networking-ci/ci/tasks/docker/generate-image-labels.sh
    - put: routecontroller-image
      params:
        build: cf-k8s-networking/routecontroller
        dockerfile: cf-k8s-networking/routecontroller/Dockerfile
        additional_tags: docker-info/tags
        tag_as_latest: true
        labels_file: labels/labels.json
    - task: add-updated-digest
      file: cf-k8s-networking-ci/ci/tasks/docker/add-updated-digest.yml
      input_mapping:
        image-resource: routecontroller-image
      params:
        COMPONENT_NAME: routecontroller
    - put: cf-k8s-networking
      params:
        repository: cf-k8s-networking-modified
        rebase: true

# Environment to run tests
- name: dont-smoke-for-k8s-deploy-and-test
  serial: true
  serial_groups: [dont-smoke-for-k8s]
  plan:
    - in_parallel:
        - get: cf-for-k8s-master
        - get: cf-k8s-networking-ci
        - get: cf-k8s-networking
          resource: cf-k8s-networking-config
          trigger: true
    - task: create-gke-cluster
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/create-gke-cluster.yml
      params:
        CLUSTER_NAME: &dont-smoke-for-k8s-cluster-name dont-smoke-for-k8s
        GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
    - task: install-cf
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/install-cf-for-k8s.yml
      params:
        CF_DOMAIN: &dont-smoke-for-k8s-domain "dont-smoke-for-k8s.routing.lol"
        CLUSTER_NAME: *dont-smoke-for-k8s-cluster-name
        GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
        KPACK_GCR_ACCOUNT_KEY: ((gcp_gcr_service_account_key))
    - task: run-smoke-test
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/run-smoke-test.yml
      params:
        SMOKE_TEST_SKIP_SSL: true
    - task: generate-integration-configs
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/generate-integration-config.yml
    - task: networking-acceptance-gke-tests
      file: cf-k8s-networking-ci/ci/tasks/tests/run-networking-acceptance-gke.yml
      params:
        INTEGRATION_CONFIG_FILE: "config.json"
        CLUSTER_NAME: *dont-smoke-for-k8s-cluster-name
        GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
    - task: destroy-cluster
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/destroy-cluster.yml
      params:
        CF_DOMAIN: *dont-smoke-for-k8s-domain
        CLUSTER_NAME: *dont-smoke-for-k8s-cluster-name
        GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))

- name: bump-rc
  plan:
    - in_parallel:
        - get: cf-k8s-networking-config
          passed: [dont-smoke-for-k8s-deploy-and-test]
          trigger: true
    - put: cf-k8s-networking-rc
      params:
        repository: cf-k8s-networking-config

- name: ship-it
  plan:
    - in_parallel:
        - get: cf-k8s-networking-rc
          passed: [bump-rc]
        - get: cf-k8s-networking-ci
        - get: version
    - put: cf-k8s-networking-rc
      params:
        repository: cf-k8s-networking-rc
        tag: version/version
        only_tag: true
        tag_prefix: v
    - task: create-release
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/generate-github-release.yml
      input_mapping:
        cf-k8s-networking: cf-k8s-networking-rc
    - put: cf-k8s-networking-release
      params:
        name: release-text/name
        tag: release-text/name
        body: release-text/body.md
    - put: version
      params: {bump: minor}
