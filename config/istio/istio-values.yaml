---
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:yaml", "yaml")

apiVersion: install.istio.io/v1alpha1
kind: IstioOperatorSpec
spec:
  profile: default
  components:
    telemetry:
      k8s:
        resources:
          requests:
            cpu: 100m
            memory: 500Mi
#!    ingressGateways:
#!      - k8s:
#!          hpaSpec:
#!            maxReplicas: 1
#!            minReplicas: 1
#!    egressGateways:
#!      - k8s:
#!          hpaSpec:
#!            maxReplicas: 1
#!            minReplicas: 1
  meshConfig:
    tcpKeepalive:
      time: 300s
  values:
    gateways:
      istio-ingressgateway:
        autoscaleEnabled: false
        externalTrafficPolicy: Local
        sds:
          enabled: true
    prometheus:
      enabled: false
    sidecarInjectorWebhook:
      rewriteAppHTTPProbe: true
    global:
      controlPlaneSecurityEnabled: true
      mtls:
        auto: true
      proxy:
        accessLogFile: "/dev/stdout"
        accessLogFormat: >-
          {
            "app_id": "%REQ(CF-APP-ID)%",
            "authority": "%REQ(:AUTHORITY)%",
            "bytes_received": "%BYTES_RECEIVED%",
            "bytes_sent": "%BYTES_SENT%",
            "downstream_local_address": "%DOWNSTREAM_LOCAL_ADDRESS%",
            "downstream_remote_address": "%DOWNSTREAM_REMOTE_ADDRESS%",
            "duration": "%DURATION%",
            "method": "%REQ(:METHOD)%",
            "organization_id": "%REQ(CF-ORGANIZATION-ID)%",
            "path": "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%",
            "process_type": "%REQ(APP-PROCESS-TYPE)%",
            "protocol": "%PROTOCOL%",
            "referer": "%REQ(REFERER)%",
            "request_id": "%REQ(X-REQUEST-ID)%",
            "requested_server_name": "%REQUESTED_SERVER_NAME%",
            "response_code": "%RESPONSE_CODE%",
            "response_duration": "%RESPONSE_DURATION%",
            "response_flags": "%RESPONSE_FLAGS%",
            "response_tx_duration": "%RESPONSE_TX_DURATION%",
            "space_id": "%REQ(CF-SPACE-ID)%",
            "start_time": "%START_TIME%",
            "upstream_cluster": "%UPSTREAM_CLUSTER%",
            "upstream_host": "%UPSTREAM_HOST%",
            "upstream_local_address": "%UPSTREAM_LOCAL_ADDRESS%",
            "upstream_service_time": "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%",
            "upstream_transport_failure_reason": "%UPSTREAM_TRANSPORT_FAILURE_REASON%",
            "user_agent": "%REQ(USER-AGENT)%",
            "x_b3_parentspanid": "%REQ(X-B3-PARENTSPANID)%",
            "x_b3_spanid": "%REQ(X-B3-SPANID)%",
            "x_b3_traceid": "%REQ(X-B3-TRACEID)%",
            "x_forwarded_for": "%REQ(X-FORWARDED-FOR)%",
            "x_forwarded_proto": "%REQ(X-FORWARDED-PROTO)%"
          }
        accessLogEncoding: 'JSON'

#! Add HorizontalPodAutoscaler configuration for all components

#@ def components():
trafficManagement: [pilot, proxy, istiodRemote]
policy: [policy]
telemetry: [telemetry]
security: [citadel, certManager, nodeAgent]
configManagement: [galley]
autoInjection: [sidecarInjector]
cni: [cni]
coreDNS: [coreDNS]
#@ end

#! #@overlay/match by=overlay.all
#! #@overlay/match-child-defaults missing_ok=True
#! ---
#! spec:
#!   #@yaml/text-templated-strings
#!   #@ for/end compName, subComps in yaml.decode(yaml.encode(components())).items():
#!   components:
#!     #@ for/end subCompName in subComps:
#!     (@= subCompName @):
#!       k8s:
#!         hpaSpec:
#!           maxReplicas: 1
#!           minReplicas: 1
