#@ load("@ytt:data", "data")

#@ def istio_ns_selector():
namespaceSelector:
  matchLabels:
    cf-for-k8s.cloudfoundry.org/istio-system-ns: ""
#@ end

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pilot-network-policy
  namespace: istio-system
spec:
  podSelector:
    matchLabels:
      app: pilot
  policyTypes:
  - Ingress
  ingress:
  - ports:
    - port: #@ data.values.istio_ports.policy_telemetry_mtls
    - port: #@ data.values.istio_ports.pilot_service_discovery
    - port: #@ data.values.istio_ports.pilot_service_proxy_discovery_mtls
    - port: #@ data.values.istio_ports.control_plane_monitoring

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: citadel-network-policy
  namespace: istio-system
spec:
  podSelector:
    matchLabels:
      app: citadel
  policyTypes:
  - Ingress
  ingress:
  - from:
      - #@ istio_ns_selector()
    ports:
    - port: #@ data.values.istio_ports.grpc_server
    - port: #@ data.values.istio_ports.sds_service_monitoring
  - ports:
    - port: #@ data.values.istio_ports.control_plane_monitoring
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mixer-network-policy
  namespace: istio-system
spec:
  podSelector:
    matchLabels:
      app: mixer
  policyTypes:
  - Ingress
  ingress:
  - from:
    - #@ istio_ns_selector()
    ports:
    - port: #@ data.values.istio_ports.policy_telemetry
    - port: #@ data.values.istio_ports.policy_telemetry_mtls
    - port: #@ data.values.istio_ports.proxy
    - port: #@ data.values.istio_ports.telemetry_prometheus
  - ports:
    - port: #@ data.values.istio_ports.control_plane_monitoring
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sidecar-injector-network-policy
  namespace: istio-system
spec:
  podSelector:
    matchLabels:
      app: sidecarInjectorWebhook
  policyTypes:
  - Ingress
  ingress:
  - ports:
    - port: #@ data.values.istio_ports.sidecar_injector
    - port: #@ data.values.istio_ports.control_plane_monitoring
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingressgateway-network-policy-pilot
  namespace: istio-system
spec:
  podSelector:
    matchLabels:
      app: istio-ingressgateway
  policyTypes:
  - Ingress
  ingress:
  - from:
    - #@ istio_ns_selector()
    ports:
    - port: #@ data.values.istio_ports.sni_monitoring
    - port: #@ data.values.istio_ports.pilot_health_checks
  - ports:
    - port: 80
    - port: 443
    - port: 8080
    - port: 8443
